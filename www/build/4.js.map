{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AAapC,IAAa,eAAe;IAA5B;IAA8B,CAAC;IAAD,sBAAC;AAAD,CAAC;AAAlB,eAAe;IAX3B,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,yDAAS;SACV;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;SACpC;QACD,OAAO,EAAE;YACL,yDAAS;SACZ;KACF,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;ACdc;AAC8C;AACtC;AAClD;;;;;GAKG;AAOH,IAAa,SAAS;IAOpB,mBAAoB,SAA6B,EAAS,KAAsB,EAAU,OAAsB;QAA5F,cAAS,GAAT,SAAS,CAAoB;QAAS,UAAK,GAAL,KAAK,CAAiB;QAAU,YAAO,GAAP,OAAO,CAAe;QAE9G,IAAI,CAAC,yBAAyB,GAAG;YAC/B,OAAO,EAAG,aAAa;YACvB,QAAQ,EAAG,IAAI;SAChB;QACD,IAAI,CAAC,yBAAyB,GAAG;YAC/B,OAAO,EAAG,gBAAgB;YAC1B,QAAQ,EAAG,IAAI;SAChB;QACD,IAAI,CAAC,6BAA6B,GAAG;YACnC,OAAO,EAAG,6BAA6B;YACvC,QAAQ,EAAG,IAAI;SAChB;QAED,IAAI,CAAC,wBAAwB,GAAG;YAC9B,OAAO,EAAG,oBAAoB;YAC9B,QAAQ,EAAG,IAAI;SAChB;IACH,CAAC;IAED,kCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAC1C,CAAC;IAED,4BAAQ,GAAR,UAAS,QAAQ;QACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IAED,yBAAK,GAAL,UAAM,KAAS,EAAE,IAAQ;QACvB,IAAI,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC;QAC3B,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1B,EAAE,EAAC,QAAQ,IAAI,EAAG,CAAC,EAAC;YAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC,OAAO,EAAE,CAAC;QAC9D,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAC;YACzB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC,OAAO,EAAE,CAAC;QAC9D,CAAC;QAAA,IAAI,CAAC,EAAE,EAAC,QAAQ,IAAI,OAAO,IAAI,QAAQ,IAAI,OAAO,CAAC,EAAC;YACnD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC,OAAO,EAAE,CAAC;QAClE,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACjC,OAAO,EAAE,gBAAgB;gBACzB,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,MAAM,CAAC,OAAO,EAAE,CAAC;YACjB,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,UAAU,CAAE;gBACV,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC;YACnC,CAAC,EAAC,IAAI,CAAC,CAAC;QACV,CAAC;IACH,CAAC;IAEH,gBAAC;AAAD,CAAC;AA1DY,SAAS;IALrB,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;OACG;KAC1B,CAAC;cAQgH;AAmDjH;SA1DY,SAAS,e","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { LoginPage } from './login';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(LoginPage),\r\n  ],\r\n  exports: [\r\n      LoginPage\r\n  ]\r\n})\r\nexport class LoginPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, ToastController, ToastOptions, NavController } from 'ionic-angular';\r\nimport { LoadingController } from 'ionic-angular';\r\n/**\r\n * Generated class for the LoginPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html',\r\n})\r\nexport class LoginPage {\r\n\r\n  toastEmptyUsernameOptions : ToastOptions;\r\n  toastEmptyPasswordOptions : ToastOptions;\r\n  toastWrongLoginAndPassOptions : ToastOptions;\r\n  toastSuccessLoginOptions : ToastOptions;\r\n  splashScreen : SplashScreen;\r\n  constructor(private loginCntr : LoadingController,private toast: ToastController, private navCtrl: NavController) {\r\n    \r\n    this.toastEmptyUsernameOptions = {\r\n      message : 'Empty Login',\r\n      duration : 2000\r\n    }\r\n    this.toastEmptyPasswordOptions = {\r\n      message : 'Empty Password',\r\n      duration : 2000\r\n    }\r\n    this.toastWrongLoginAndPassOptions = {\r\n      message : 'Login or Password was wrong',\r\n      duration : 2000\r\n    }\r\n\r\n    this.toastSuccessLoginOptions = {\r\n      message : 'Login successfully',\r\n      duration : 2000\r\n    }\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad LoginPage');\r\n  }\r\n\r\n  goToPage(pageName) {\r\n      this.navCtrl.push(pageName);\r\n  }\r\n\r\n  login(login:any, pass:any){\r\n    var username = login.value;\r\n    var password = pass.value;\r\n    if(username == \"\" ){\r\n      this.toast.create(this.toastEmptyUsernameOptions).present();\r\n    } else if (password == \"\"){\r\n      this.toast.create(this.toastEmptyPasswordOptions).present();\r\n    }else if(username != \"admin\" || password != \"admin\"){\r\n      this.toast.create(this.toastWrongLoginAndPassOptions).present(); \r\n    }else{\r\n      let loader = this.loginCntr.create({\r\n        content: \"Please wait...\",\r\n        duration: 3000\r\n      });\r\n      loader.present();\r\n      var selet = this;\r\n      setTimeout( function(){\r\n        selet.navCtrl.setRoot('TabsPage')\r\n      },3000);\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}